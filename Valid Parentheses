class Solution {
    Stack<Character> stk = new Stack<>();
    
      public char getTop(){
        return stk.peek();
    }
    
    public boolean match(int i, char c){
        if(i == '(' && c == ')'){
            return true;
        }else if(i == '{' && c == '}'){
            return true;
        }else if(i == '[' && c== ']'){
            return true;
        }
        return false;
    }
    
    
    public boolean isValid(String s) {
         if(s== null || s.isEmpty()){
            return true;
        }
        
        if(s.charAt(0)== '}' || s.charAt(0)== ')' || s.charAt(0)== ']'){
            return false;
        }
        if(s.charAt(s.length()-1)== '{' || s.charAt(s.length()-1)== '(' || s.charAt(s.length()-1)== '['){
            return false;
        }
       
        for(int i = 0; i<s.length(); i++){
            if(stk.isEmpty()){
                stk.push(s.charAt(i));
            }else{
                if(!match(getTop(), s.charAt(i))){
                   stk.push(s.charAt(i));
                }else{
                    
                    stk.pop();
                }
            }
        }
        return stk.isEmpty();
    }
    

}
