/** Given a binary tree, determine if it is a valid binary search tree (BST). */



/** Using Inorder Traversal */

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    Stack<TreeNode> stk = new Stack<>();
    double prev = - Double.MAX_VALUE;
    public boolean isValidBST(TreeNode root) {
        while(!stk.isEmpty() || root !=null){
            while(root!=null){
                stk.push(root);
                root= root.left;     
            }
            TreeNode curr = stk.pop();
            if(curr.val<=prev){
                return false;
            }
            prev = curr.val;
            root = curr.right;
            
        }
        return true;
          
    }
}








