/**Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Notice that the solution set must not contain duplicate triplets.

 

Example 1:

Input: nums = [-1,0,1,2,-1,-4]
Output: [[-1,-1,2],[-1,0,1]]*/




/**TC: O(n2) SC: O(num of 3 sets)*/





class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        Arrays.sort(nums);
        List<List<Integer>> res = new ArrayList<>();
        for(int i=0; i<nums.length; i++){
            int j = i+1;
            int k = nums.length -1;
            if (i > 0 && nums[i] == nums[i - 1]) {              // skip same result
            continue;
        }
            
            while(j<k){
            if(nums[i]+nums[j]+nums[k]==0){
                    
               res.add(Arrays.asList(nums[i], nums[j], nums[k]));
                j++;
                k--;
                while(j<k && nums[j]==nums[j-1]){
                j++;
                }
                while(j <k && nums[k]==nums[k+1]){
                k--;
                }
                
            }
            else if(nums[i]+nums[j]+nums[k]<0){
                 j++;
             }
                else if(nums[i]+nums[j]+nums[k]>0){
                 k--;
                }
        }
            
        
        
    }
     return res;   
}
}
