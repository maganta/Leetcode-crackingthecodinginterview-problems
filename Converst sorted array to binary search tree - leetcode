/**Given an array where elements are sorted in ascending order, convert it to a height balanced BST. */



//recursive solution
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode sortedArrayToBST(int[] nums) {
        return helper(nums, 0, nums.length-1);
        
        
    }
    
    public TreeNode helper(int[] A, int s, int e){
         if(s>e){
            return null;
         }
            int mid = (s + e)/2;
            TreeNode root = new TreeNode(A[mid]);
            root.left = helper(A, s, mid-1);
            root.right = helper(A, mid+1, e);
        return root;
        
    }
}
