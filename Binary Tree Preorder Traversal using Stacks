/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    ArrayList<Integer> result = new ArrayList<>();
    Stack<TreeNode> stk = new Stack<>();

    public List<Integer> preorderTraversal(TreeNode root) {
        
        if(root == null){
            return result;
        }
        stk.push(root);
        
        while(!stk.isEmpty()){
            TreeNode t = stk.pop();
            result.add(t.val);
            
            if(t.right!= null){
                stk.push(t.right);
            }
            if (t.left!=null){
                stk.push(t.left);
            }
        }
        return result;    
        
    }
}
